[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"/articles/confintr.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using confintr","text":"aim vignette introduce R package confintr calculating one- two-sided classic bootstrap confidence intervals. Confidence intervals following parameters available: mean (Student, Wald, bootstrap), proportion (Wilson, Clopper-Pearson, Agresti-Coutts, bootstrap), median quantiles (distribution-free binomial bootstrap), variance standard deviation (chi-squared, bootstrap), IQR MAD (bootstrap ), skewness kurtosis (bootstrap ), R-squared non-centrality parameter F distribution (parametric), Cramér’s V non-centrality parameter chi-squared distribution (parametric bootstrap), odds ratio 2x2 table (exact), Pearson-, Spearman-, Kendall correlation coefficients (normal Pearson, bootstrap ), Mean, quantile median differences two samples (quantile/median bootstrap). Many classic confidence intervals list discussed (Smithson 2003). offer different types bootstrap intervals: Normal (“norm”) bootstrap confidence interval: Wald/Student confidence interval using standard error standard deviation bootstrap distribution plus bootstrap bias correction. Simple, first-order accurate transformation respecting. Percentile (“perc”) bootstrap confidence interval: Uses quantiles bootstrap distribution confidence limits. Simple, first order accurate. Transformation respecting. Basic (“basic”) reverse bootstrap confidence interval: Flipped version percentile approach, dealing bias price unnaturally tailed sampling distributions. first order accurate. Bias-corrected accelerated (“bca”) confidence interval: Refined version percentile bootstrap second order accurate transformation respecting. Needs replications observations. Usually default. Student-t (“stud”) bootstrap confidence interval: Refined version normal bootstrap replaces Student quantile custom quantile obtained bootstrapping variance bootstrapped statistic. Second order accurate transformation respecting. Requires formula variance estimator, confintr provides mean, mean difference, variance (standard deviation) well proportion. Used default mean mean difference. details bootstrap confidence intervals, refer (Efron Tibshirani 1993). provide widely used boot package (Canty Ripley 2019).","code":""},{"path":"/articles/confintr.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Using confintr","text":"CRAN: Latest version github:","code":"install.packages(\"confintr\") library(devtools) install_github(\"mayer79/confintr\")"},{"path":"/articles/confintr.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Using confintr","text":"","code":"library(confintr)  set.seed(1)  # Mean ci_mean(1:100) #>  #>  Two-sided 95% t confidence interval for the population mean #>  #> Sample estimate: 50.5  #> Confidence interval: #>     2.5%    97.5%  #> 44.74349 56.25651 ci_mean(1:100, type = \"bootstrap\") #>  #>  Two-sided 95% bootstrap confidence interval for the population mean #>  based on 9999 bootstrap replications and the student method #>  #> Sample estimate: 50.5  #> Confidence interval: #>     2.5%    97.5%  #> 44.72913 56.34685  # 95% value at risk ci_quantile(rexp(1000), q = 0.95) #>  #>  Two-sided 95% binomial confidence interval for the population 95% #>  quantile #>  #> Sample estimate: 3.054989  #> Confidence interval: #>     2.5%    97.5%  #> 2.745526 3.499928  # IQR ci_IQR(rexp(100), R = 999) #>  #>  Two-sided 95% bootstrap confidence interval for the population IQR #>  based on 999 bootstrap replications and the bca method #>  #> Sample estimate: 1.042259  #> Confidence interval: #>      2.5%     97.5%  #> 0.8778725 1.3773426  # Correlation ci_cor(iris[1:2], method = \"spearman\", type = \"bootstrap\", R = 999) #>  #>  Two-sided 95% bootstrap confidence interval for the true Spearman #>  correlation coefficient based on 999 bootstrap replications and the bca #>  method #>  #> Sample estimate: -0.1667777  #> Confidence interval: #>         2.5%        97.5%  #> -0.299445947 -0.005167341  # Proportions ci_proportion(10, n = 100, type = \"Wilson\") #>  #>  Two-sided 95% Wilson confidence interval for the true proportion #>  #> Sample estimate: 0.1  #> Confidence interval: #>       2.5%      97.5%  #> 0.05522914 0.17436566 ci_proportion(10, n = 100, type = \"Clopper-Pearson\") #>  #>  Two-sided 95% Clopper-Pearson confidence interval for the true #>  proportion #>  #> Sample estimate: 0.1  #> Confidence interval: #>       2.5%      97.5%  #> 0.04900469 0.17622260  # R-squared fit <- lm(Sepal.Length ~ ., data = iris) ci_rsquared(fit, probs = c(0.05, 1)) #>  #>  One-sided 95% F confidence interval for the population R-squared #>  #> Sample estimate: 0.8673123  #> Confidence interval: #>        5%      100%  #> 0.8312405 1.0000000  # Kurtosis ci_kurtosis(1:100) #>  #>  Two-sided 95% bootstrap confidence interval for the population kurtosis #>  based on 9999 bootstrap replications and the bca method #>  #> Sample estimate: 1.79976  #> Confidence interval: #>     2.5%    97.5%  #> 1.584104 2.050858  # Mean difference ci_mean_diff(10:30, 1:15) #>  #>  Two-sided 95% t confidence interval for the population value of #>  mean(x)-mean(y) #>  #> Sample estimate: 12  #> Confidence interval: #>      2.5%     97.5%  #>  8.383547 15.616453 ci_mean_diff(10:30, 1:15, type = \"bootstrap\", R  = 999) #>  #>  Two-sided 95% bootstrap confidence interval for the population value of #>  mean(x)-mean(y) based on 999 bootstrap replications and the student #>  method #>  #> Sample estimate: 12  #> Confidence interval: #>      2.5%     97.5%  #>  8.531103 15.863771  # Median difference ci_median_diff(10:30, 1:15, R  = 999) #>  #>  Two-sided 95% bootstrap confidence interval for the population value of #>  median(x)-median(y) based on 999 bootstrap replications and the bca #>  method #>  #> Sample estimate: 12  #> Confidence interval: #>      2.5%     97.5%  #>  4.675892 16.000000"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Mayer. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mayer M (2022). confintr: Confidence Intervals. R package version 0.2.0, https://github.com/mayer79/confintr.","code":"@Manual{,   title = {confintr: Confidence Intervals},   author = {Michael Mayer},   year = {2022},   note = {R package version 0.2.0},   url = {https://github.com/mayer79/confintr}, }"},{"path":"/index.html","id":"confintr-","dir":"","previous_headings":"","what":"Confidence Intervals","title":"Confidence Intervals","text":"confintr package offers classic /bootstrap confidence intervals following parameters: mean, quantiles incl. median, proportion, variance standard deviation, IQR MAD, skewness kurtosis, R-squared non-centrality parameter F distribution, Cramér’s V non-centrality parameter chi-squared distribution, odds ratio 2x2 table, Pearson-, Spearman-, Kendall correlation coefficients, mean, quantile median differences. one- two-sided intervals supported. Different types bootstrap intervals possible argument boot_type, see vignette.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Confidence Intervals","text":"CRAN: Latest version github:","code":"install.packages(\"confintr\") library(devtools) install_github(\"mayer79/confintr\")"},{"path":"/index.html","id":"teaser","dir":"","previous_headings":"","what":"Teaser","title":"Confidence Intervals","text":"","code":"library(confintr) set.seed(1)  # Mean ci_mean(1:100)  # Two-sided 95% t confidence interval for the population mean #  # Sample estimate: 50.5  # Confidence interval: #     2.5%    97.5%  # 44.74349 56.25651   # Mean using the Bootstrap ci_mean(1:100, type = \"bootstrap\")  #   Two-sided 95% bootstrap confidence interval for the population mean #   based on 9999 bootstrap replications and the student method #  # Sample estimate: 50.5  # Confidence interval: #     2.5%    97.5%  # 44.72913 56.34685  # 95% value at risk ci_quantile(rexp(1000), q = 0.95)  #   Two-sided 95% binomial confidence interval for the population 95% #   quantile #  # Sample estimate: 2.954119  # Confidence interval: #     2.5%    97.5%  # 2.745526 3.499928   # Mean difference ci_mean_diff(1:100, 2:101)  #   Two-sided 95% t confidence interval for the population value of mean(x)-mean(y) # # Sample estimate: -1  # Confidence interval: #      2.5%     97.5%  # -9.090881  7.090881   ci_mean_diff(1:100, 2:101, type = \"bootstrap\", seed = 1)  # Two-sided 95% bootstrap confidence interval for the population value of mean(x)-mean(y) # based on 9999 bootstrap replications and the student method # # Sample estimate: -1  # Confidence interval: #      2.5%     97.5%  # -9.057506  7.092050  # Further examples (without output)  # Correlation ci_cor(iris[1:2], method = \"spearman\", type = \"bootstrap\")  # Proportions ci_proportion(10, n = 100, type = \"Wilson\") ci_proportion(10, n = 100, type = \"Clopper-Pearson\")  # R-squared fit <- lm(Sepal.Length ~ ., data = iris) ci_rsquared(fit, probs = c(0.05, 1))  # Kurtosis ci_kurtosis(1:100)  # Mean difference ci_mean_diff(10:30, 1:15) ci_mean_diff(10:30, 1:15, type = \"bootstrap\", R  = 999)  # Median difference ci_median_diff(10:30, 1:15, R  = 999)"},{"path":"/reference/ci_IQR.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for the Interquartile Range — ci_IQR","title":"Confidence Interval for the Interquartile Range — ci_IQR","text":"function calculates bootstrap confidence intervals population interquartile range (IQR), .e. difference first third quartile.","code":""},{"path":"/reference/ci_IQR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for the Interquartile Range — ci_IQR","text":"","code":"ci_IQR(   x,   probs = c(0.025, 0.975),   type = \"bootstrap\",   boot_type = c(\"bca\", \"perc\", \"norm\", \"basic\"),   R = 9999,   seed = NULL,   ... )"},{"path":"/reference/ci_IQR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for the Interquartile Range — ci_IQR","text":"x numeric vector. probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval. type Type confidence interval. Currently used type \"bootstrap\". boot_type Type bootstrap confidence interval c(\"bca\", \"perc\", \"norm\", \"basic\"). R number bootstrap resamples. seed integer random seed. ... arguments passed boot::boot.","code":""},{"path":"/reference/ci_IQR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for the Interquartile Range — ci_IQR","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":"/reference/ci_IQR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval for the Interquartile Range — ci_IQR","text":"Bootstrap confidence intervals calculated package \"boot\", see references. default bootstrap type \"bca\" (bias-corrected accelerated) enjoys property second order accurate well transformation respecting (see Efron, p. 188).","code":""},{"path":"/reference/ci_IQR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval for the Interquartile Range — ci_IQR","text":"Efron, B. Tibshirani R. J. (1994). Introduction Bootstrap. Chapman & Hall/CRC. Canty, Ripley B. (2019). boot: Bootstrap R (S-Plus) Functions.","code":""},{"path":"/reference/ci_IQR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for the Interquartile Range — ci_IQR","text":"","code":"set.seed(1) x <- rnorm(100) ci_IQR(x, R = 999) #>  #> \tTwo-sided 95% bootstrap confidence interval for the population IQR #> \tbased on 999 bootstrap replications and the bca method #>  #> Sample estimate: 1.185788  #> Confidence interval: #>      2.5%     97.5%  #> 0.9681325 1.4570612  #>"},{"path":"/reference/ci_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap Confidence Interval — ci_boot","title":"Bootstrap Confidence Interval — ci_boot","text":"Internel wrapper boot::boot.ci. Contains logic one-sided asymmetric confidence intervals.","code":""},{"path":"/reference/ci_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap Confidence Interval — ci_boot","text":"","code":"ci_boot(S, boot_type = c(\"norm\", \"basic\", \"stud\", \"perc\", \"bca\"), probs, ...)"},{"path":"/reference/ci_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap Confidence Interval — ci_boot","text":"S Result boot. boot_type Confidence interval type passed boot::boot.ci. probs Probability cuts confidence intervals. ... arguments passed boot::boot.ci.","code":""},{"path":"/reference/ci_boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap Confidence Interval — ci_boot","text":"numeric vector length two.","code":""},{"path":"/reference/ci_chisq_ncp.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for the Non-Centrality Parameter of the Chi-Squared Distribution — ci_chisq_ncp","title":"Confidence Interval for the Non-Centrality Parameter of the Chi-Squared Distribution — ci_chisq_ncp","text":"function calculates confidence intervals non-centrality parameter chi-squared distribution based chi-squared test inversion bootstrap. positive lower (1-alpha)*100%-confidence limit ncp goes hand--hand significant association test level alpha.","code":""},{"path":"/reference/ci_chisq_ncp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for the Non-Centrality Parameter of the Chi-Squared Distribution — ci_chisq_ncp","text":"","code":"ci_chisq_ncp(   x,   probs = c(0.025, 0.975),   correct = TRUE,   type = c(\"chi-squared\", \"bootstrap\"),   boot_type = c(\"bca\", \"perc\", \"norm\", \"basic\"),   R = 9999,   seed = NULL,   ... )"},{"path":"/reference/ci_chisq_ncp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for the Non-Centrality Parameter of the Chi-Squared Distribution — ci_chisq_ncp","text":"x result stats::chisq.test, table/matrix frequencies, data.frame exactly two columns. probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval. correct Yates continuity correction applied 2x2 case? default TRUE (also used bootstrap). type Type confidence interval. One \"chi-squared\" (default) \"bootstrap\". boot_type Type bootstrap confidence interval (\"bca\", \"perc\", \"norm\", \"basic\"). used type = \"bootstrap\". R number bootstrap resamples. used type = \"bootstrap\". seed integer random seed. used type = \"bootstrap\". ... arguments passed boot::boot.","code":""},{"path":"/reference/ci_chisq_ncp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for the Non-Centrality Parameter of the Chi-Squared Distribution — ci_chisq_ncp","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":"/reference/ci_chisq_ncp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval for the Non-Centrality Parameter of the Chi-Squared Distribution — ci_chisq_ncp","text":"Bootstrap confidence intervals calculated package \"boot\", see references. default bootstrap type \"bca\" (bias-corrected accelerated) enjoys property second order accurate well transformation respecting (see Efron, p. 188). Note large chi-squared test statistics might provide unreliable results method \"chi-squared\" (see ?pchisq).","code":""},{"path":"/reference/ci_chisq_ncp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval for the Non-Centrality Parameter of the Chi-Squared Distribution — ci_chisq_ncp","text":"Smithson, M. (2003). Confidence intervals. Series: Quantitative Applications Social Sciences. New York, NY: Sage Publications. Efron, B. Tibshirani R. J. (1994). Introduction Bootstrap. Chapman & Hall/CRC. Canty, Ripley B. (2019). boot: Bootstrap R (S-Plus) Functions.","code":""},{"path":[]},{"path":"/reference/ci_chisq_ncp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for the Non-Centrality Parameter of the Chi-Squared Distribution — ci_chisq_ncp","text":"","code":"ci_chisq_ncp(mtcars[c(\"am\", \"vs\")]) #>  #> \tTwo-sided 95% chi-squared confidence interval for the non-centrality #> \tparameter of the chi-squared distribution #>  #> Sample estimate: 0  #> Confidence interval: #>     2.5%    97.5%  #> 0.000000 6.423431  #>  ci_chisq_ncp(mtcars[c(\"am\", \"vs\")], type = \"bootstrap\", R = 999) #>  #> \tTwo-sided 95% bootstrap confidence interval for the non-centrality #> \tparameter of the chi-squared distribution based on 999 bootstrap #> \treplications and the bca method #>  #> Sample estimate: 0  #> Confidence interval: #>     2.5%    97.5%  #> 0.000000 4.322421  #>  ir <- iris ir$PL <- ir$Petal.Width > 1 ci_chisq_ncp(ir[, c(\"Species\", \"PL\")]) #>  #> \tTwo-sided 95% chi-squared confidence interval for the non-centrality #> \tparameter of the chi-squared distribution #>  #> Sample estimate: 122.4482  #> Confidence interval: #>     2.5%    97.5%  #>  83.6525 170.9345  #>  ci_chisq_ncp(ir[, c(\"Species\", \"PL\")], probs = c(0.05, 1)) #>  #> \tOne-sided 95% chi-squared confidence interval for the non-centrality #> \tparameter of the chi-squared distribution #>  #> Sample estimate: 122.4482  #> Confidence interval: #>       5%     100%  #> 89.53126      Inf  #>"},{"path":"/reference/ci_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for Correlation Coefficients — ci_cor","title":"Confidence Interval for Correlation Coefficients — ci_cor","text":"function calculates confidence intervals population correlation coefficient. Pearson correlation, \"normal\" confidence intervals available (stats::cor.test). Also bootstrap confidence intervals supported option rank correlations.","code":""},{"path":"/reference/ci_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for Correlation Coefficients — ci_cor","text":"","code":"ci_cor(   x,   y = NULL,   probs = c(0.025, 0.975),   method = c(\"pearson\", \"kendall\", \"spearman\"),   type = c(\"normal\", \"bootstrap\"),   boot_type = c(\"bca\", \"perc\", \"norm\", \"basic\"),   R = 9999,   seed = NULL,   ... )"},{"path":"/reference/ci_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for Correlation Coefficients — ci_cor","text":"x numeric vector matrix/data.frame exactly two numeric columns. y numeric vector (used x vector). probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval. method Type correlation coefficient, one \"pearson\" (default), \"kendall\", \"spearman\". latter two, bootstrap confidence intervals supported. names can abbreviated. type Type confidence interval. One \"normal\" (default) \"bootstrap\" (option rank-correlations). boot_type Type bootstrap confidence interval (\"bca\", \"perc\", \"norm\", \"basic\"). used type = \"bootstrap\". R number bootstrap resamples. used type = \"bootstrap\". seed integer random seed. used type = \"bootstrap\". ... arguments passed boot::boot.","code":""},{"path":"/reference/ci_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for Correlation Coefficients — ci_cor","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":"/reference/ci_cor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval for Correlation Coefficients — ci_cor","text":"Bootstrap confidence intervals calculated package \"boot\", see references. default bootstrap type \"bca\" (bias-corrected accelerated) enjoys property second order accurate well transformation respecting (see Efron, p. 188).","code":""},{"path":"/reference/ci_cor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval for Correlation Coefficients — ci_cor","text":"Efron, B. Tibshirani R. J. (1994). Introduction Bootstrap. Chapman & Hall/CRC. Canty, Ripley B. (2019). boot: Bootstrap R (S-Plus) Functions.","code":""},{"path":"/reference/ci_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for Correlation Coefficients — ci_cor","text":"","code":"ci_cor(iris[1:2]) #>  #> \tTwo-sided 95% normal confidence interval for the true Pearson #> \tcorrelation coefficient #>  #> Sample estimate: -0.1175698  #> Confidence interval: #>        2.5%       97.5%  #> -0.27269325  0.04351158  #>  ci_cor(iris[1:2], type = \"bootstrap\", R = 999, seed = 1) #>  #> \tTwo-sided 95% bootstrap confidence interval for the true Pearson #> \tcorrelation coefficient based on 999 bootstrap replications and the bca #> \tmethod #>  #> Sample estimate: -0.1175698  #> Confidence interval: #>        2.5%       97.5%  #> -0.27993897  0.02509863  #>  ci_cor(iris[1:2], method = \"spearman\", type = \"bootstrap\", R = 999, seed = 1) #>  #> \tTwo-sided 95% bootstrap confidence interval for the true Spearman #> \tcorrelation coefficient based on 999 bootstrap replications and the bca #> \tmethod #>  #> Sample estimate: -0.1667777  #> Confidence interval: #>        2.5%       97.5%  #> -0.33210636 -0.02445773  #>  ci_cor(iris[1:2], method = \"k\", type = \"bootstrap\", R = 999, seed = 1) #>  #> \tTwo-sided 95% bootstrap confidence interval for the true Kendall #> \tcorrelation coefficient based on 999 bootstrap replications and the bca #> \tmethod #>  #> Sample estimate: -0.07699679  #> Confidence interval: #>        2.5%       97.5%  #> -0.18899934  0.02319063  #>"},{"path":"/reference/ci_cramersv.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for the Population Cramer's V — ci_cramersv","title":"Confidence Interval for the Population Cramer's V — ci_cramersv","text":"function calculates confidence intervals population Cramer's V. default, parametric approach based non-centrality parameter (ncp) chi-squared distribution utilized. Alternatively, bootstrap confidence intervals available, also boostrapping confidence intervals ncp.","code":""},{"path":"/reference/ci_cramersv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for the Population Cramer's V — ci_cramersv","text":"","code":"ci_cramersv(   x,   probs = c(0.025, 0.975),   type = c(\"chi-squared\", \"bootstrap\"),   boot_type = c(\"bca\", \"perc\", \"norm\", \"basic\"),   R = 9999,   seed = NULL,   test_adjustment = TRUE,   ... )"},{"path":"/reference/ci_cramersv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for the Population Cramer's V — ci_cramersv","text":"x result stats::chisq.test, matrix/table counts data.frame exactly two columns representing two variables. probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval. type Type confidence interval. One \"chi-squared\" (default) \"bootstrap\". boot_type Type bootstrap confidence interval (\"bca\", \"perc\", \"norm\", \"basic\"). used type = \"bootstrap\". R number bootstrap resamples. used type = \"bootstrap\". seed integer random seed. used type = \"bootstrap\". test_adjustment Adjustment allow test association, see Details. default TRUE. ... arguments passed resample::CI.boot_type.","code":""},{"path":"/reference/ci_cramersv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for the Population Cramer's V — ci_cramersv","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":"/reference/ci_cramersv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval for the Population Cramer's V — ci_cramersv","text":"positive lower (1-alpha)*100%-confidence limit ncp goes hand--hand significant association test level alpha. order allow test approach also Cramer's V, lower bound ncp 0, round 0 also lower bound Cramer's V. Without slightly conservative adjustment, lower limit V always positive since ci V = sqrt((ci ncp + df)/(n (k - 1))), k smaller number levels two variables (see Smithson formula). Use test_adjustment = FALSE switch behaviour. Note also reason bootstrap V via ncp instead directly bootstrapping V. Bootstrap confidence intervals calculated package \"boot\", see references. default bootstrap type \"bca\" (bias-corrected accelerated) enjoys property second order accurate well transformation respecting (see Efron, p. 188). Note continuity correction applied 2x2 tables. note large chi-squared test statistics might provide unreliable results method \"chi-squared\" (see ?pchisq).","code":""},{"path":"/reference/ci_cramersv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval for the Population Cramer's V — ci_cramersv","text":"Smithson, M. (2003). Confidence intervals. Series: Quantitative Applications Social Sciences. New York, NY: Sage Publications. Efron, B. Tibshirani R. J. (1994). Introduction Bootstrap. Chapman & Hall/CRC. Canty, Ripley B. (2019). boot: Bootstrap R (S-Plus) Functions.","code":""},{"path":[]},{"path":"/reference/ci_cramersv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for the Population Cramer's V — ci_cramersv","text":"","code":"ir <- iris ir$PL <- ir$Petal.Width > 1 ci_cramersv(ir[, c(\"Species\", \"PL\")]) #>  #> \tTwo-sided 95% chi-squared confidence interval for the population #> \tCramer's V #>  #> Sample estimate: 0.9108539  #> Confidence interval: #>      2.5%     97.5%  #> 0.7556565 1.0000000  #>  ci_cramersv(ir[, c(\"Species\", \"PL\")], type = \"bootstrap\", R = 999) #>  #> \tTwo-sided 95% bootstrap confidence interval for the population Cramer's #> \tV based on 999 bootstrap replications and the bca method #>  #> Sample estimate: 0.9108539  #> Confidence interval: #>      2.5%     97.5%  #> 0.8490936 0.9584247  #>  ci_cramersv(ir[, c(\"Species\", \"PL\")], probs = c(0.05, 1)) #>  #> \tOne-sided 95% chi-squared confidence interval for the population #> \tCramer's V #>  #> Sample estimate: 0.9108539  #> Confidence interval: #>        5%      100%  #> 0.7811584 1.0000000  #>  ci_cramersv(mtcars[c(\"am\", \"vs\")]) #>  #> \tTwo-sided 95% chi-squared confidence interval for the population #> \tCramer's V #>  #> Sample estimate: 0.1683451  #> Confidence interval: #>      2.5%     97.5%  #> 0.0000000 0.5441671  #>  ci_cramersv(mtcars[c(\"am\", \"vs\")], test_adjustment = FALSE) #>  #> \tTwo-sided 95% chi-squared confidence interval for the population #> \tCramer's V #>  #> Sample estimate: 0.1683451  #> Confidence interval: #>      2.5%     97.5%  #> 0.1767767 0.5441671  #>"},{"path":"/reference/ci_f_ncp.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for the Non-Centrality Parameter of the F Distribution — ci_f_ncp","title":"Confidence Interval for the Non-Centrality Parameter of the F Distribution — ci_f_ncp","text":"Based inversion principle, parametric confidence intervals non-centrality parameter Delta F distribution calculated. Note provide bootstrap confidence intervals keep input interface simple. positive lower (1-alpha)*100%-confidence limit ncp goes hand--hand significant F test level alpha.","code":""},{"path":"/reference/ci_f_ncp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for the Non-Centrality Parameter of the F Distribution — ci_f_ncp","text":"","code":"ci_f_ncp(x, df1 = NULL, df2 = NULL, probs = c(0.025, 0.975))"},{"path":"/reference/ci_f_ncp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for the Non-Centrality Parameter of the F Distribution — ci_f_ncp","text":"x result lm F test statistic. df1 numerator degree freedom, e.g. number parameters (including intercept) linear regression. used x test statistic. df2 denominator degree freedom, e.g. n - df1 - 1 linear regression. used x test statistic. probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval.","code":""},{"path":"/reference/ci_f_ncp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for the Non-Centrality Parameter of the F Distribution — ci_f_ncp","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":"/reference/ci_f_ncp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval for the Non-Centrality Parameter of the F Distribution — ci_f_ncp","text":"Note , according ?pf, results might unreliable large F values.","code":""},{"path":"/reference/ci_f_ncp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval for the Non-Centrality Parameter of the F Distribution — ci_f_ncp","text":"Smithson, M. (2003). Confidence intervals. Series: Quantitative Applications Social Sciences. New York, NY: Sage Publications.","code":""},{"path":[]},{"path":"/reference/ci_f_ncp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for the Non-Centrality Parameter of the F Distribution — ci_f_ncp","text":"","code":"fit <- lm(Sepal.Length ~ ., data = iris) ci_f_ncp(fit) #>  #> \tTwo-sided 95% F confidence interval for the non-centrality parameter of #> \tthe F-distribution #>  #> Sample estimate: 980.4737  #> Confidence interval: #>      2.5%     97.5%  #>  704.6598 1200.8313  #>  ci_f_ncp(fit, probs = c(0.05, 1)) #>  #> \tOne-sided 95% F confidence interval for the non-centrality parameter of #> \tthe F-distribution #>  #> Sample estimate: 980.4737  #> Confidence interval: #>       5%     100%  #> 738.8387      Inf  #>  ci_f_ncp(fit, probs = c(0, 0.95)) #>  #> \tOne-sided 95% F confidence interval for the non-centrality parameter of #> \tthe F-distribution #>  #> Sample estimate: 980.4737  #> Confidence interval: #>      0%     95%  #>    0.00 1155.07  #>  ci_f_ncp(x = 188.251, df1 = 5, df2 = 144) #>  #> \tTwo-sided 95% F confidence interval for the non-centrality parameter of #> \tthe F-distribution #>  #> Sample estimate: 980.474  #> Confidence interval: #>     2.5%    97.5%  #>  704.660 1200.832  #>"},{"path":"/reference/ci_kurtosis.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for the Kurtosis — ci_kurtosis","title":"Confidence Interval for the Kurtosis — ci_kurtosis","text":"function calculates bootstrap confidence intervals population kurtosis, see Details. Note use version kurtosis equals 3 theoretical normal distribution.","code":""},{"path":"/reference/ci_kurtosis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for the Kurtosis — ci_kurtosis","text":"","code":"ci_kurtosis(   x,   probs = c(0.025, 0.975),   type = \"bootstrap\",   boot_type = c(\"bca\", \"perc\", \"norm\", \"basic\"),   R = 9999,   seed = NULL,   ... )"},{"path":"/reference/ci_kurtosis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for the Kurtosis — ci_kurtosis","text":"x numeric vector. probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval. type Type confidence interval. Currently used type \"bootstrap\". boot_type Type bootstrap confidence interval c(\"bca\", \"perc\", \"norm\", \"basic\"). R number bootstrap resamples. seed integer random seed. ... arguments passed boot::boot.","code":""},{"path":"/reference/ci_kurtosis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for the Kurtosis — ci_kurtosis","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":"/reference/ci_kurtosis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval for the Kurtosis — ci_kurtosis","text":"Bootstrap confidence intervals calculated package \"boot\", see references. default bootstrap type \"bca\" (bias-corrected accelerated) enjoys property second order accurate well transformation respecting (see Efron, p. 188).","code":""},{"path":"/reference/ci_kurtosis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval for the Kurtosis — ci_kurtosis","text":"Efron, B. Tibshirani R. J. (1994). Introduction Bootstrap. Chapman & Hall/CRC. Canty, Ripley B. (2019). boot: Bootstrap R (S-Plus) Functions.","code":""},{"path":[]},{"path":"/reference/ci_kurtosis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for the Kurtosis — ci_kurtosis","text":"","code":"set.seed(1) x <- rnorm(100) ci_kurtosis(x, R = 999) #>  #> \tTwo-sided 95% bootstrap confidence interval for the population kurtosis #> \tbased on 999 bootstrap replications and the bca method #>  #> Sample estimate: 3.007653  #> Confidence interval: #>     2.5%    97.5%  #> 2.455576 3.776262  #>"},{"path":"/reference/ci_mad.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for the Median Absolute Deviation — ci_mad","title":"Confidence Interval for the Median Absolute Deviation — ci_mad","text":"function calculates bootstrap confidence intervals population median absolute deviation, see stats::mad information measure scale.","code":""},{"path":"/reference/ci_mad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for the Median Absolute Deviation — ci_mad","text":"","code":"ci_mad(   x,   probs = c(0.025, 0.975),   constant = 1.4826,   type = \"bootstrap\",   boot_type = c(\"bca\", \"perc\", \"norm\", \"basic\"),   R = 9999,   seed = NULL,   ... )"},{"path":"/reference/ci_mad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for the Median Absolute Deviation — ci_mad","text":"x numeric vector. probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval. constant Scaling factor applied. default (1.4826) ensures MAD equals standard deviation theoretical normal distribution. type Type confidence interval. Currently used type \"bootstrap\". boot_type Type bootstrap confidence interval c(\"bca\", \"perc\", \"norm\", \"basic\"). R number bootstrap resamples. seed integer random seed. ... arguments passed boot::boot.","code":""},{"path":"/reference/ci_mad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for the Median Absolute Deviation — ci_mad","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":"/reference/ci_mad.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval for the Median Absolute Deviation — ci_mad","text":"Bootstrap confidence intervals calculated package \"boot\", see references. default bootstrap type \"bca\" (bias-corrected accelerated) enjoys property second order accurate well transformation respecting (see Efron, p. 188).","code":""},{"path":"/reference/ci_mad.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval for the Median Absolute Deviation — ci_mad","text":"Efron, B. Tibshirani R. J. (1994). Introduction Bootstrap. Chapman & Hall/CRC. Canty, Ripley B. (2019). boot: Bootstrap R (S-Plus) Functions.","code":""},{"path":"/reference/ci_mad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for the Median Absolute Deviation — ci_mad","text":"","code":"set.seed(1) x <- rnorm(100) ci_mad(x, R = 999) #>  #> \tTwo-sided 95% bootstrap confidence interval for the population MAD #> \tbased on 999 bootstrap replications and the bca method #>  #> Sample estimate: 0.8700003  #> Confidence interval: #>     2.5%    97.5%  #> 0.671491 1.076747  #>"},{"path":"/reference/ci_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for the Population Mean — ci_mean","title":"Confidence Interval for the Population Mean — ci_mean","text":"function calculates confidence intervals population mean. default, Student's t method used. Alternatively, Wald bootstrap confidence intervals available.","code":""},{"path":"/reference/ci_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for the Population Mean — ci_mean","text":"","code":"ci_mean(   x,   probs = c(0.025, 0.975),   type = c(\"t\", \"Wald\", \"bootstrap\"),   boot_type = c(\"stud\", \"bca\", \"perc\", \"norm\", \"basic\"),   R = 9999,   seed = NULL,   ... )"},{"path":"/reference/ci_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for the Population Mean — ci_mean","text":"x numeric vector. probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval. type Type confidence interval. One \"t\" (default), \"Wald\", \"bootstrap\". boot_type Type bootstrap confidence interval (\"stud\", \"bca\", \"perc\", \"norm\", \"basic\"). used type = \"bootstrap\". R number bootstrap resamples. used type = \"bootstrap\". seed integer random seed. used type = \"bootstrap\". ... arguments passed boot::boot.","code":""},{"path":"/reference/ci_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for the Population Mean — ci_mean","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":"/reference/ci_mean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval for the Population Mean — ci_mean","text":"Bootstrap confidence intervals calculated package \"boot\", see references. default bootstrap type mean \"stud\" (bootstrap t) enjoys property second order accurate stable variance estimator (see Efron, p. 188).","code":""},{"path":"/reference/ci_mean.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval for the Population Mean — ci_mean","text":"Smithson, M. (2003). Confidence intervals. Series: Quantitative Applications Social Sciences. New York, NY: Sage Publications. Efron, B. Tibshirani R. J. (1994). Introduction Bootstrap. Chapman & Hall/CRC. Canty, Ripley B. (2019). boot: Bootstrap R (S-Plus) Functions.","code":""},{"path":"/reference/ci_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for the Population Mean — ci_mean","text":"","code":"x <- 1:100 ci_mean(x) #>  #> \tTwo-sided 95% t confidence interval for the population mean #>  #> Sample estimate: 50.5  #> Confidence interval: #>     2.5%    97.5%  #> 44.74349 56.25651  #>  ci_mean(x, type = \"bootstrap\", R = 999, seed = 1) #>  #> \tTwo-sided 95% bootstrap confidence interval for the population mean #> \tbased on 999 bootstrap replications and the student method #>  #> Sample estimate: 50.5  #> Confidence interval: #>     2.5%    97.5%  #> 44.92988 56.27187  #>  ci_mean(x, type = \"bootstrap\", R = 999, probs = c(0.025, 1), seed = 1) #>  #> \tOne-sided 97.5% bootstrap confidence interval for the population mean #> \tbased on 999 bootstrap replications and the student method #>  #> Sample estimate: 50.5  #> Confidence interval: #>     2.5%   100.0%  #> 44.92988      Inf  #>  ci_mean(x, type = \"bootstrap\", R = 999, probs = c(0, 0.975), seed = 1) #>  #> \tOne-sided 97.5% bootstrap confidence interval for the population mean #> \tbased on 999 bootstrap replications and the student method #>  #> Sample estimate: 50.5  #> Confidence interval: #>     0.0%    97.5%  #>     -Inf 56.27187  #>"},{"path":"/reference/ci_mean_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for the Population Mean Difference — ci_mean_diff","title":"Confidence Interval for the Population Mean Difference — ci_mean_diff","text":"function calculates confidence intervals population value mean(x) - mean(y). default Student's method Welch's correction unequal variances, also bootstrap confidence intervals available.","code":""},{"path":"/reference/ci_mean_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for the Population Mean Difference — ci_mean_diff","text":"","code":"ci_mean_diff(   x,   y,   probs = c(0.025, 0.975),   var.equal = FALSE,   type = c(\"t\", \"bootstrap\"),   boot_type = c(\"stud\", \"bca\", \"perc\", \"norm\", \"basic\"),   R = 9999,   seed = NULL,   ... )"},{"path":"/reference/ci_mean_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for the Population Mean Difference — ci_mean_diff","text":"x numeric vector. y numeric vector. probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval. var.equal two variances treated equal? default FALSE. TRUE, pooled variance used estimate variance mean difference. Otherweise, Welch's approach used. also applies \"stud\" boostrap. type Type confidence interval. One \"t\" (default), \"bootstrap\". boot_type Type bootstrap confidence interval (\"stud\", \"bca\", \"perc\", \"norm\", \"basic\"). used type = \"bootstrap\". R number bootstrap resamples. used type = \"bootstrap\". seed integer random seed. used type = \"bootstrap\". ... arguments passed boot::boot.","code":""},{"path":"/reference/ci_mean_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for the Population Mean Difference — ci_mean_diff","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":"/reference/ci_mean_diff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval for the Population Mean Difference — ci_mean_diff","text":"Bootstrap confidence intervals calculated package \"boot\". default bootstrap type mean difference \"stud\" (bootstrap t) enjoys property second order accurate stable variance estimator (see Efron, p. 188). resampling done within sample. boot_type = \"stud\", standard error estimated Welch's method var.equal = FALSE (default) pooling otherwise. Thus, var.equal effect classic Student approach (type = \"t\") also boot_type = \"stud\".","code":""},{"path":"/reference/ci_mean_diff.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval for the Population Mean Difference — ci_mean_diff","text":"Efron, B. Tibshirani R. J. (1994). Introduction Bootstrap. Chapman & Hall/CRC. Canty, Ripley B. (2019). boot: Bootstrap R (S-Plus) Functions.","code":""},{"path":"/reference/ci_mean_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for the Population Mean Difference — ci_mean_diff","text":"","code":"x <- 10:30 y <- 1:30 ci_mean_diff(x, y) #>  #> \tTwo-sided 95% t confidence interval for the population value of #> \tmean(x)-mean(y) #>  #> Sample estimate: 4.5  #> Confidence interval: #>      2.5%     97.5%  #> 0.2766822 8.7233178  #>  t.test(x, y)$conf.int #> [1] 0.2766822 8.7233178 #> attr(,\"conf.level\") #> [1] 0.95 ci_mean_diff(x, y, type = \"bootstrap\", R = 999) #>  #> \tTwo-sided 95% bootstrap confidence interval for the population value of #> \tmean(x)-mean(y) based on 999 bootstrap replications and the student #> \tmethod #>  #> Sample estimate: 4.5  #> Confidence interval: #>      2.5%     97.5%  #> 0.2700011 9.0850971  #>"},{"path":"/reference/ci_median.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for the Population Median — ci_median","title":"Confidence Interval for the Population Median — ci_median","text":"function calculates confidence intervals population median calling ci_quantile(..., q = 0.5). See ci_quantile details.","code":""},{"path":"/reference/ci_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for the Population Median — ci_median","text":"","code":"ci_median(   x,   probs = c(0.025, 0.975),   type = c(\"binomial\", \"bootstrap\"),   boot_type = c(\"bca\", \"perc\", \"norm\", \"basic\"),   R = 9999,   seed = NULL,   ... )"},{"path":"/reference/ci_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for the Population Median — ci_median","text":"x numeric vector. probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval. type Type confidence interval. One \"binomial\" (default), \"bootstrap\". boot_type Type bootstrap confidence interval (\"bca\", \"perc\", \"norm\", \"basic\"). used type = \"bootstrap\". R number bootstrap resamples. used type = \"bootstrap\". seed integer random seed. used type = \"bootstrap\". ... arguments passed boot::boot.","code":""},{"path":"/reference/ci_median.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for the Population Median — ci_median","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":[]},{"path":"/reference/ci_median.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for the Population Median — ci_median","text":"","code":"ci_median(1:100) #>  #> \tTwo-sided 95% binomial confidence interval for the population median #>  #> Sample estimate: 50.5  #> Confidence interval: #>  2.5% 97.5%  #>    40    61  #>  ci_quantile(1:100) #>  #> \tTwo-sided 95% binomial confidence interval for the population 50% #> \tquantile #>  #> Sample estimate: 50.5  #> Confidence interval: #>  2.5% 97.5%  #>    40    61  #>"},{"path":"/reference/ci_median_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for the Population Median Difference of two Samples — ci_median_diff","title":"Confidence Interval for the Population Median Difference of two Samples — ci_median_diff","text":"function calculates bootstrap confidence intervals population value median(x) - median(y) calling ci_quantile_diff(, q = 0.5). See ci_quantile_diff details.","code":""},{"path":"/reference/ci_median_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for the Population Median Difference of two Samples — ci_median_diff","text":"","code":"ci_median_diff(   x,   y,   probs = c(0.025, 0.975),   type = \"bootstrap\",   boot_type = c(\"bca\", \"perc\", \"norm\", \"basic\"),   R = 9999,   seed = NULL,   ... )"},{"path":"/reference/ci_median_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for the Population Median Difference of two Samples — ci_median_diff","text":"x numeric vector. y numeric vector. probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval. type Type confidence interval. Currently, \"bootstrap\" option. boot_type Type bootstrap confidence interval (\"bca\", \"perc\", \"norm\", \"basic\"). R number bootstrap resamples. seed integer random seed. ... arguments passed boot::boot.","code":""},{"path":"/reference/ci_median_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for the Population Median Difference of two Samples — ci_median_diff","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":[]},{"path":"/reference/ci_median_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for the Population Median Difference of two Samples — ci_median_diff","text":"","code":"x <- 10:30 y <- 1:30 ci_median_diff(x, y, R = 999) #>  #> \tTwo-sided 95% bootstrap confidence interval for the population value of #> \tmedian(x)-median(y) based on 999 bootstrap replications and the bca #> \tmethod #>  #> Sample estimate: 4.5  #> Confidence interval: #>  2.5% 97.5%  #>  -3.0  10.5  #>"},{"path":"/reference/ci_oddsratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for the Odds Ratio — ci_oddsratio","title":"Confidence Interval for the Odds Ratio — ci_oddsratio","text":"function calculates confidence interval odds ratio 2x2 table/matrix data frame two columns. confidence interval obtained stats::fisher.test. Bootstrap confidence intervals available.","code":""},{"path":"/reference/ci_oddsratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for the Odds Ratio — ci_oddsratio","text":"","code":"ci_oddsratio(x, probs = c(0.025, 0.975))"},{"path":"/reference/ci_oddsratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for the Odds Ratio — ci_oddsratio","text":"x 2x2 table/matrix frequencies, data.frame exactly two columns. probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval.","code":""},{"path":"/reference/ci_oddsratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for the Odds Ratio — ci_oddsratio","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":[]},{"path":"/reference/ci_oddsratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for the Odds Ratio — ci_oddsratio","text":"","code":"x <- cbind(c(10, 5), c(4, 4)) ci_oddsratio(x) #>  #> \tTwo-sided 95% exact confidence interval for the true odds ratio #>  #> Sample estimate: 2  #> Confidence interval: #>       2.5%      97.5%  #>  0.2457839 15.9953738  #>"},{"path":"/reference/ci_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for a Population Proportion — ci_proportion","title":"Confidence Interval for a Population Proportion — ci_proportion","text":"function calculates confidence intervals population proportion. default, \"Clopper-Pearson\" confidence intervals calculated (via stats::binom.test). possibilities \"Wilson\", \"Agresti-Coull\", \"bootstrap\" (mainly added consistency didactic purposes).","code":""},{"path":"/reference/ci_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for a Population Proportion — ci_proportion","text":"","code":"ci_proportion(   x,   n = NULL,   probs = c(0.025, 0.975),   type = c(\"Clopper-Pearson\", \"Agresti-Coull\", \"Wilson\", \"bootstrap\"),   boot_type = c(\"bca\", \"perc\", \"stud\", \"norm\", \"basic\"),   R = 9999,   seed = NULL,   ... )"},{"path":"/reference/ci_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for a Population Proportion — ci_proportion","text":"x numeric vector 0 1 number successes. n sample size. needed x vector length 1. probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval. type Type confidence interval. One \"Clopper-Pearson\" (default), \"Agresti–Coull\", \"Wilson\", \"bootstrap\". boot_type Type bootstrap confidence interval (\"bca\", \"perc\", \"stud\", \"norm\", \"basic\"). used type = \"bootstrap\". R number bootstrap resamples. used type = \"bootstrap\". seed integer random seed. used type = \"bootstrap\". ... arguments passed boot::boot.","code":""},{"path":"/reference/ci_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for a Population Proportion — ci_proportion","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":"/reference/ci_proportion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval for a Population Proportion — ci_proportion","text":"Bootstrap confidence intervals calculated package \"boot\", see references. default bootstrap type proportion \"bca\" (bias-corrected accelerated) enjoys property second order accurate well transformation respecting (see Efron, p. 188). Note use formula https://en.wikipedia.org/wiki/Binomial_proportion_confidence_interval simplify 0.975 quantile normal 2 sometimes references.","code":""},{"path":"/reference/ci_proportion.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval for a Population Proportion — ci_proportion","text":"Clopper, C. Pearson, E. S. (1934). use confidence fiducial limits illustrated case binomial. Biometrika. 26 (4). Wilson, E. B. (1927). Probable inference, law succession, statistical inference. Journal American Statistical Association, 22 (158). Agresti, . Coull, B. . (1998). Approximate better 'exact' interval estimation binomial proportions. American Statistician, 52 (2). Efron, B. Tibshirani R. J. (1994). Introduction Bootstrap. Chapman & Hall/CRC. Canty, Ripley B. (2019). boot: Bootstrap R (S-Plus) Functions.","code":""},{"path":"/reference/ci_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for a Population Proportion — ci_proportion","text":"","code":"x <- rep(0:1, times = c(50, 100)) ci_proportion(x) #>  #> \tTwo-sided 95% Clopper-Pearson confidence interval for the true #> \tproportion #>  #> Sample estimate: 0.6666667  #> Confidence interval: #>      2.5%     97.5%  #> 0.5851570 0.7414436  #>  ci_proportion(x, type = \"Wilson\") #>  #> \tTwo-sided 95% Wilson confidence interval for the true proportion #>  #> Sample estimate: 0.6666667  #> Confidence interval: #>      2.5%     97.5%  #> 0.5878976 0.7371124  #>  ci_proportion(x, type = \"Agresti-Coull\") #>  #> \tTwo-sided 95% Agresti-Coull confidence interval for the true proportion #>  #> Sample estimate: 0.6666667  #> Confidence interval: #>      2.5%     97.5%  #> 0.5877845 0.7372254  #>  ci_proportion(x, type = \"bootstrap\", R = 999) #>  #> \tTwo-sided 95% bootstrap confidence interval for the true proportion #> \tbased on 999 bootstrap replications and the bca method #>  #> Sample estimate: 0.6666667  #> Confidence interval: #>      2.5%     97.5%  #> 0.5866667 0.7403864  #>"},{"path":"/reference/ci_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for a Population Quantile — ci_quantile","title":"Confidence Interval for a Population Quantile — ci_quantile","text":"function calculates confidence intervals population quantile. default, distribution-free confidence intervals based binomial distribution formed, see Hahn Meeker. Alternatively, bootstrap confidence intervals available.","code":""},{"path":"/reference/ci_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for a Population Quantile — ci_quantile","text":"","code":"ci_quantile(   x,   q = 0.5,   probs = c(0.025, 0.975),   type = c(\"binomial\", \"bootstrap\"),   boot_type = c(\"bca\", \"perc\", \"norm\", \"basic\"),   R = 9999,   seed = NULL,   ... )"},{"path":"/reference/ci_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for a Population Quantile — ci_quantile","text":"x numeric vector. q single probability value determining quantile. Set 0.5 median (default). probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval. type Type confidence interval. One \"binomial\" (default), \"bootstrap\". boot_type Type bootstrap confidence interval (\"bca\", \"perc\", \"norm\", \"basic\"). used type = \"bootstrap\". R number bootstrap resamples. used type = \"bootstrap\". seed integer random seed. used type = \"bootstrap\". ... arguments passed boot::boot.","code":""},{"path":"/reference/ci_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for a Population Quantile — ci_quantile","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":"/reference/ci_quantile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval for a Population Quantile — ci_quantile","text":"Bootstrap confidence intervals calculated package \"boot\", see references. default bootstrap type \"bca\" (bias-corrected accelerated) enjoys property second order accurate well transformation respecting (see Efron, p. 188).","code":""},{"path":"/reference/ci_quantile.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval for a Population Quantile — ci_quantile","text":"Hahn, G. Meeker, W. (1991). Statistical Intervals. Wiley 1991. Efron, B. Tibshirani R. J. (1994). Introduction Bootstrap. Chapman & Hall/CRC. Canty, Ripley B. (2019). boot: Bootstrap R (S-Plus) Functions.","code":""},{"path":[]},{"path":"/reference/ci_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for a Population Quantile — ci_quantile","text":"","code":"x <- 1:100 ci_quantile(x) #>  #> \tTwo-sided 95% binomial confidence interval for the population 50% #> \tquantile #>  #> Sample estimate: 50.5  #> Confidence interval: #>  2.5% 97.5%  #>    40    61  #>  ci_quantile(x, q = 0.25) #>  #> \tTwo-sided 95% binomial confidence interval for the population 25% #> \tquantile #>  #> Sample estimate: 25.75  #> Confidence interval: #>  2.5% 97.5%  #>    17    35  #>  ci_quantile(x, q = 0.25, type = \"bootstrap\", R = 999) #>  #> \tTwo-sided 95% bootstrap confidence interval for the population 25% #> \tquantile based on 999 bootstrap replications and the bca method #>  #> Sample estimate: 25.75  #> Confidence interval: #>     2.5%    97.5%  #> 17.75000 33.95852  #>"},{"path":"/reference/ci_quantile_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for the Population Quantile Difference of two Samples — ci_quantile_diff","title":"Confidence Interval for the Population Quantile Difference of two Samples — ci_quantile_diff","text":"function calculates bootstrap confidence intervals population value q quantile(x) - q quantile(y).","code":""},{"path":"/reference/ci_quantile_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for the Population Quantile Difference of two Samples — ci_quantile_diff","text":"","code":"ci_quantile_diff(   x,   y,   q = 0.5,   probs = c(0.025, 0.975),   type = \"bootstrap\",   boot_type = c(\"bca\", \"perc\", \"norm\", \"basic\"),   R = 9999,   seed = NULL,   ... )"},{"path":"/reference/ci_quantile_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for the Population Quantile Difference of two Samples — ci_quantile_diff","text":"x numeric vector. y numeric vector. q single probability value determining quantile. Set 0.5 median (default). probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval. type Type confidence interval. Currently, \"bootstrap\" option. boot_type Type bootstrap confidence interval (\"bca\", \"perc\", \"norm\", \"basic\"). R number bootstrap resamples. seed integer random seed. ... arguments passed boot::boot.","code":""},{"path":"/reference/ci_quantile_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for the Population Quantile Difference of two Samples — ci_quantile_diff","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":"/reference/ci_quantile_diff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval for the Population Quantile Difference of two Samples — ci_quantile_diff","text":"Bootstrap confidence intervals calculated package \"boot\". default bootstrap type \"bca\" (bias-corrected & accelerated) enjoys property second order accurate transformation respecting (see Efron, p. 188). sampling done within sample.","code":""},{"path":"/reference/ci_quantile_diff.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval for the Population Quantile Difference of two Samples — ci_quantile_diff","text":"Efron, B. Tibshirani R. J. (1994). Introduction Bootstrap. Chapman & Hall/CRC. Canty, Ripley B. (2019). boot: Bootstrap R (S-Plus) Functions.","code":""},{"path":[]},{"path":"/reference/ci_quantile_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for the Population Quantile Difference of two Samples — ci_quantile_diff","text":"","code":"x <- 10:30 y <- 1:30 ci_quantile_diff(x, y, R = 999) #>  #> \tTwo-sided 95% bootstrap confidence interval for the population value of #> \t50% quantile(x) - 50% quantile(y) based on 999 bootstrap replications #> \tand the bca method #>  #> Sample estimate: 4.5  #> Confidence interval: #>  2.5% 97.5%  #>  -2.5  11.0  #>"},{"path":"/reference/ci_rsquared.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for the Population R-Squared — ci_rsquared","title":"Confidence Interval for the Population R-Squared — ci_rsquared","text":"function calculates parametric confidence intervals population R-squared. based confidence intervals non-centrality parameter Delta F distribution, found test inversion. Delta values mapped R-squared R-squared = Delta / (Delta + df1 + df2 + 1), df1 df2 degrees freedom F test statistic. positive lower (1-alpha)*100%-confidence limit R-squared goes hand--hand significant F test level alpha.","code":""},{"path":"/reference/ci_rsquared.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for the Population R-Squared — ci_rsquared","text":"","code":"ci_rsquared(x, df1 = NULL, df2 = NULL, probs = c(0.025, 0.975))"},{"path":"/reference/ci_rsquared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for the Population R-Squared — ci_rsquared","text":"x result stats::lm F test statistic. df1 numerator degree freedom. used x test statistic. df2 denominator degree freedom. used x test statistic. probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval.","code":""},{"path":"/reference/ci_rsquared.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for the Population R-Squared — ci_rsquared","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":"/reference/ci_rsquared.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval for the Population R-Squared — ci_rsquared","text":"According ?pf, results might unreliable large F values. Note provide bootstrap confidence intervals keep input interface simple.","code":""},{"path":"/reference/ci_rsquared.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval for the Population R-Squared — ci_rsquared","text":"Smithson, M. (2003). Confidence intervals. Series: Quantitative Applications Social Sciences. New York, NY: Sage Publications.","code":""},{"path":[]},{"path":"/reference/ci_rsquared.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for the Population R-Squared — ci_rsquared","text":"","code":"fit <- lm(Sepal.Length ~ ., data = iris) summary(fit)$r.squared #> [1] 0.8673123 ci_rsquared(fit) #>  #> \tTwo-sided 95% F confidence interval for the population R-squared #>  #> Sample estimate: 0.8673123  #> Confidence interval: #>      2.5%     97.5%  #> 0.8244916 0.8889573  #>  ci_rsquared(fit, probs = c(0.05, 1)) #>  #> \tOne-sided 95% F confidence interval for the population R-squared #>  #> Sample estimate: 0.8673123  #> Confidence interval: #>        5%      100%  #> 0.8312405 1.0000000  #>  ci_rsquared(fit, probs = c(0, 0.95)) #>  #> \tOne-sided 95% F confidence interval for the population R-squared #>  #> Sample estimate: 0.8673123  #> Confidence interval: #>        0%       95%  #> 0.0000000 0.8850636  #>  ci_rsquared(188.251, 5, 144) #>  #> \tTwo-sided 95% F confidence interval for the population R-squared #>  #> Sample estimate: 0.8673123  #> Confidence interval: #>      2.5%     97.5%  #> 0.8244916 0.8889573  #>"},{"path":"/reference/ci_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for the Population Standard Deviation — ci_sd","title":"Confidence Interval for the Population Standard Deviation — ci_sd","text":"function calculates confidence intervals population standard deviation. derived calculating confidence intervals variance taking square-root. details, see ci_var.","code":""},{"path":"/reference/ci_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for the Population Standard Deviation — ci_sd","text":"","code":"ci_sd(   x,   probs = c(0.025, 0.975),   type = c(\"chi-squared\", \"bootstrap\"),   boot_type = c(\"bca\", \"perc\", \"stud\", \"norm\", \"basic\"),   R = 9999,   seed = NULL,   ... )"},{"path":"/reference/ci_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for the Population Standard Deviation — ci_sd","text":"x numeric vector. probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval. type Type confidence interval. One \"chi-squared\" (default) \"bootstrap\". boot_type Type bootstrap confidence interval (\"bca\", \"perc\", \"stud\", \"norm\", \"basic\"). used type = \"bootstrap\". R number bootstrap resamples. used type = \"bootstrap\". seed integer random seed. used type = \"bootstrap\". ... arguments passed boot::boot.","code":""},{"path":"/reference/ci_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for the Population Standard Deviation — ci_sd","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":[]},{"path":"/reference/ci_sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for the Population Standard Deviation — ci_sd","text":"","code":"x <- 1:100 sd(x) #> [1] 29.01149 ci_sd(x) #>  #> \tTwo-sided 95% chi-squared confidence interval for the population #> \tstandard deviation #>  #> Sample estimate: 29.01149  #> Confidence interval: #>     2.5%    97.5%  #> 25.47229 33.70193  #>  sqrt(ci_var(x)$interval) #> [1] 25.47229 33.70193 ci_sd(x, type = \"bootstrap\", R = 999) #>  #> \tTwo-sided 95% bootstrap confidence interval for the population standard #> \tdeviation based on 999 bootstrap replications and the bca method #>  #> Sample estimate: 29.01149  #> Confidence interval: #>     2.5%    97.5%  #> 26.53083 31.46958  #>"},{"path":"/reference/ci_skewness.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for the Skewness — ci_skewness","title":"Confidence Interval for the Skewness — ci_skewness","text":"function calculates bootstrap confidence intervals population skewness, see Details.","code":""},{"path":"/reference/ci_skewness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for the Skewness — ci_skewness","text":"","code":"ci_skewness(   x,   probs = c(0.025, 0.975),   type = \"bootstrap\",   boot_type = c(\"bca\", \"perc\", \"norm\", \"basic\"),   R = 9999,   seed = NULL,   ... )"},{"path":"/reference/ci_skewness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for the Skewness — ci_skewness","text":"x numeric vector. probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval. type Type confidence interval. Currently used type \"bootstrap\". boot_type Type bootstrap confidence interval c(\"bca\", \"perc\", \"norm\", \"basic\"). R number bootstrap resamples. seed integer random seed. ... arguments passed boot::boot.","code":""},{"path":"/reference/ci_skewness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for the Skewness — ci_skewness","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":"/reference/ci_skewness.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval for the Skewness — ci_skewness","text":"Bootstrap confidence intervals calculated package \"boot\", see references. default bootstrap type \"bca\" (bias-corrected accelerated) enjoys property second order accurate well transformation respecting (see Efron, p. 188).","code":""},{"path":"/reference/ci_skewness.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval for the Skewness — ci_skewness","text":"Efron, B. Tibshirani R. J. (1994). Introduction Bootstrap. Chapman & Hall/CRC. Canty, Ripley B. (2019). boot: Bootstrap R (S-Plus) Functions.","code":""},{"path":[]},{"path":"/reference/ci_skewness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for the Skewness — ci_skewness","text":"","code":"set.seed(1) x <- rnorm(100) ci_skewness(x, R = 999) #>  #> \tTwo-sided 95% bootstrap confidence interval for the population skewness #> \tbased on 999 bootstrap replications and the bca method #>  #> Sample estimate: -0.0722319  #> Confidence interval: #>       2.5%      97.5%  #> -0.4917919  0.3368046  #>"},{"path":"/reference/ci_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for the Population Variance — ci_var","title":"Confidence Interval for the Population Variance — ci_var","text":"function calculates confidence intervals population variance. default, classic confidence intervals calculated based chi-squared distribution, assuming normal distribution (see Smithson). Bootstrap confidence intervals also available recommended non-normal case chi-squared confidence intervals sensitive deviations normality.","code":""},{"path":"/reference/ci_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for the Population Variance — ci_var","text":"","code":"ci_var(   x,   probs = c(0.025, 0.975),   type = c(\"chi-squared\", \"bootstrap\"),   boot_type = c(\"bca\", \"perc\", \"stud\", \"norm\", \"basic\"),   R = 9999,   seed = NULL,   ... )"},{"path":"/reference/ci_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for the Population Variance — ci_var","text":"x numeric vector. probs Error probabilites. default c(0.025, 0.975) gives symmetric 95% confidence interval. type Type confidence interval. One \"chi-squared\" (default) \"bootstrap\". boot_type Type bootstrap confidence interval (\"bca\", \"perc\", \"stud\", \"norm\", \"basic\"). used type = \"bootstrap\". R number bootstrap resamples. used type = \"bootstrap\". seed integer random seed. used type = \"bootstrap\". ... arguments passed boot::boot.","code":""},{"path":"/reference/ci_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for the Population Variance — ci_var","text":"list class cint containing components: parameter: parameter question. interval: confidence interval parameter. estimate: estimate parameter. probs: vector error probabilities. type: type interval. info: additional description text interval.","code":""},{"path":"/reference/ci_var.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval for the Population Variance — ci_var","text":"Bootstrap confidence intervals calculated package \"boot\", see references. default bootstrap type \"bca\" (bias-corrected accelerated) enjoys property second order accurate well transformation respecting (see Efron, p. 188). \"stud\" (bootstrap t) bootstrap uses general formula standard error sample variance given Wilks.","code":""},{"path":"/reference/ci_var.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval for the Population Variance — ci_var","text":"Smithson, M. (2003). Confidence intervals. Series: Quantitative Applications Social Sciences. New York, NY: Sage Publications. S.S. Wilks (1962), Mathematical Statistics, Wiley & Sons. Efron, B. Tibshirani R. J. (1994). Introduction Bootstrap. Chapman & Hall/CRC. Canty, Ripley B. (2019). boot: Bootstrap R (S-Plus) Functions.","code":""},{"path":[]},{"path":"/reference/ci_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for the Population Variance — ci_var","text":"","code":"x <- 1:100 ci_var(x) #>  #> \tTwo-sided 95% chi-squared confidence interval for the population #> \tvariance #>  #> Sample estimate: 841.6667  #> Confidence interval: #>      2.5%     97.5%  #>  648.8375 1135.8202  #>  ci_var(x, type = \"bootstrap\", R = 999) #>  #> \tTwo-sided 95% bootstrap confidence interval for the population variance #> \tbased on 999 bootstrap replications and the bca method #>  #> Sample estimate: 841.6667  #> Confidence interval: #>     2.5%    97.5%  #> 716.4407 999.7748  #>"},{"path":"/reference/cramersv.html","id":null,"dir":"Reference","previous_headings":"","what":"Cramer's V — cramersv","title":"Cramer's V — cramersv","text":"function calculates Cramer's V, measure association two categorical variables. scaled version chi-squared test statistic lies 0 1. Cramer's V calculated sqrt(chi-squared / (n * (k - 1))), n number observations k smaller number levels two variables.","code":""},{"path":"/reference/cramersv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cramer's V — cramersv","text":"","code":"cramersv(x)"},{"path":"/reference/cramersv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cramer's V — cramersv","text":"x result stats::chisq.test, matrix/table counts data.frame exactly two columns representing two variables.","code":""},{"path":"/reference/cramersv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cramer's V — cramersv","text":"numeric vector length one.","code":""},{"path":"/reference/cramersv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cramer's V — cramersv","text":"Yates continuity correction never applied. 2x2 case, x result stats::chisq.test, make sure continuity correction applied. Otherwise, results can inconsistent.","code":""},{"path":"/reference/cramersv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cramer's V — cramersv","text":"Cramer, Harald. 1946. Mathematical Methods Statistics. Princeton: Princeton University Press, page 282 (Chapter 21. two-dimensional case).","code":""},{"path":"/reference/cramersv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cramer's V — cramersv","text":"","code":"tab <- table(mtcars[c(\"am\", \"vs\")]) chi <- chisq.test(tab, correct = FALSE) cramersv(mtcars[c(\"am\", \"vs\")]) #> [1] 0.1683451 cramersv(chi) #> [1] 0.1683451 cramersv(tab) #> [1] 0.1683451"},{"path":"/reference/is.cint.html","id":null,"dir":"Reference","previous_headings":"","what":"Type Check — is.cint","title":"Type Check — is.cint","text":"Checks object inherits class 'cint'.","code":""},{"path":"/reference/is.cint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Type Check — is.cint","text":"","code":"is.cint(x)"},{"path":"/reference/is.cint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Type Check — is.cint","text":"x object.","code":""},{"path":"/reference/is.cint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Type Check — is.cint","text":"logical vector length one.","code":""},{"path":"/reference/is.cint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Type Check — is.cint","text":"","code":"is.cint(ci_proportion(5, 20)) #> [1] TRUE"},{"path":"/reference/moments.html","id":null,"dir":"Reference","previous_headings":"","what":"Moments — moments","title":"Moments — moments","text":"Functions calculate moments, skewness, Pearson's measure kurtosis. latter defined ratio 4th central moment squared second central moment. theoretical normal distribution, kurtosis equals 3.","code":""},{"path":"/reference/moments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moments — moments","text":"","code":"moment(z, p = 1, central = TRUE, na.rm = TRUE)  skewness(z, na.rm = TRUE)  kurtosis(z, na.rm = TRUE)"},{"path":"/reference/moments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moments — moments","text":"z Numeric vector. p Order moment. central central moment calculated? Default TRUE. na.rm missing values removed? Default TRUE. Otherwise, result NA missing values present.","code":""},{"path":"/reference/moments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moments — moments","text":"numeric vector length one.","code":""},{"path":"/reference/moments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moments — moments","text":"","code":"x <- 1:100 moment(x, 4) #> [1] 1249583 skewness(x) #> [1] 0 kurtosis(x) #> [1] 1.79976"},{"path":"/reference/oddsratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Odds Ratio — oddsratio","title":"Odds Ratio — oddsratio","text":"function calculates odds ratio 2x2 table/matrix data frame two columns. numerator equals ratio top left entry bottom left entry, denonimator equals ratio top right entry bottom right entry. usually slightly different calculation stats::fisher.test based ML estimate odds ratio.","code":""},{"path":"/reference/oddsratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Odds Ratio — oddsratio","text":"","code":"oddsratio(x)"},{"path":"/reference/oddsratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Odds Ratio — oddsratio","text":"x 2x2 matrix/table counts data.frame exactly two columns representing two binary variables.","code":""},{"path":"/reference/oddsratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Odds Ratio — oddsratio","text":"numeric vector length one.","code":""},{"path":"/reference/oddsratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Odds Ratio — oddsratio","text":"","code":"tab <- cbind(c(10, 5), c(4, 4)) oddsratio(tab) #> [1] 2"},{"path":"/reference/print.cint.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a cint Object — print.cint","title":"Print a cint Object — print.cint","text":"Print method object class cint.","code":""},{"path":"/reference/print.cint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a cint Object — print.cint","text":"","code":"# S3 method for cint print(x, digits = getOption(\"digits\"), ...)"},{"path":"/reference/print.cint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a cint Object — print.cint","text":"x object class cint. digits Number digits used format sample estimate confidence limits. ... arguments passed methods.","code":""},{"path":"/reference/print.cint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a cint Object — print.cint","text":"Invisibly, input returned.","code":""},{"path":"/reference/print.cint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a cint Object — print.cint","text":"","code":"ci_mean(1:100) #>  #> \tTwo-sided 95% t confidence interval for the population mean #>  #> Sample estimate: 50.5  #> Confidence interval: #>     2.5%    97.5%  #> 44.74349 56.25651  #>"},{"path":"/reference/se.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard errors — se","title":"Standard errors — se","text":"Functions calculate standard errors different statistics. availability standard error (statistic proportional ) allows apply \"stud\" (bootstrap t) bootstrap.","code":""},{"path":"/reference/se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard errors — se","text":"","code":"se_mean(z, na.rm = TRUE, ...)  se_mean_diff(z, y, na.rm = TRUE, var.equal = FALSE, ...)  se_var(z, na.rm = TRUE, ...)  se_proportion(z, na.rm = TRUE, ...)"},{"path":"/reference/se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard errors — se","text":"z Numeric vector. na.rm missing values removed calculation? default TRUE convenience. ... arguments passed methods. y Numeric vector. var.equal two variances treated equal? default FALSE. TRUE, pooled variance used estimate variance mean difference. Otherweise, Welch's approach used (see stats::t.test). also applies \"stud\" bootstrap.","code":""},{"path":"/reference/se.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard errors — se","text":"numeric vector length one.","code":""},{"path":"/reference/se.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard errors — se","text":"","code":"se_mean(1:100) #> [1] 2.901149"},{"path":"/news/index.html","id":"confintr-020","dir":"Changelog","previous_headings":"","what":"confintr 0.2.0","title":"confintr 0.2.0","text":"CRAN release: 2022-09-29","code":""},{"path":"/news/index.html","id":"bug-fix-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fix","title":"confintr 0.2.0","text":"Fixes mistake calculation studentized bootstrap CIs, impacting ci_mean(), ci_mean_diff(), ci_var(), ci_sd(), ci_proportion() used together options type = \"bootstrap\" boot_type = \"stud\". studentized bootstrap default boot_type ci_mean() ci_mean_diff(). mistake happened calculating pivotal quantity, statistic . Thus, affected confidence intervals usually slightly .","code":""},{"path":"/news/index.html","id":"explanation-0-2-0","dir":"Changelog","previous_headings":"Bug fix","what":"Explanation","title":"confintr 0.2.0","text":"“confintr” uses “boot” package backend calculating bootstrap confidence intervals. calculate studentized confidence bootstrap intervals, boot() requires function provides two values: statistic interest variance. “confintr” package passed standard deviation instead variance.","code":""},{"path":"/news/index.html","id":"confintr-012","dir":"Changelog","previous_headings":"","what":"confintr 0.1.2","title":"confintr 0.1.2","text":"CRAN release: 2022-01-28 maintenance release , getting rid CRAN note LazyData, updating testthat v3, using elegant way generate/update package.","code":""},{"path":"/news/index.html","id":"confintr-011","dir":"Changelog","previous_headings":"","what":"confintr 0.1.1","title":"confintr 0.1.1","text":"CRAN release: 2020-06-29 Added confidence intervals odds ratio via stats::fisher.test. Fixed wrong VignetteIndexEntry.","code":""},{"path":"/news/index.html","id":"confintr-010","dir":"Changelog","previous_headings":"","what":"confintr 0.1.0","title":"confintr 0.1.0","text":"CRAN release: 2020-06-04 initial CRAN release.","code":""}]
